<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zkr.rew.csfirst.dao.RewcsfirstvoteDao">
    
	<sql id="rewcsfirstvoteColumns">
		a.id AS "id",
		p.projectid AS "projectid",
		p.currentYear as "currentYear",
		IFNULL(t.scope,0) AS "scope",
		a.isagree AS "isagree",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate"
	</sql>
	
	<sql id="rewcsfirstvoteJoins">
	</sql>
    
	<select id="get" resultType="com.zkr.rew.csfirst.entity.Rewcsfirstvote">
		SELECT 
			<include refid="rewcsfirstvoteColumns"/>
		FROM rewcsfirstvote a
		<include refid="rewcsfirstvoteJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="com.zkr.rew.csfirst.entity.Rewcsfirstvote">
		SELECT 
			<include refid="rewcsfirstvoteColumns"/>
			,c.categoryName as "categoryName"
			,i.recomIdea as "recomIdea"
			,g.groupName as "groupName"
		FROM rewproject p 
		<include refid="rewcsfirstvoteJoins"/>
		left join rewcsfirstvote a on a.projectId = p.projectId 
		<if test="!isGlyRole">
			and a.create_by=#{currentUser.id}
		</if>
		
		 left join (select  a.projectId as "projectId",
							ROUND((avg(a.KPIWeight1) +
							AVG(a.KPIWeight2) + 
							AVG(a.KPIWeight3) + 
							AVG(a.KPIWeight4) + 
							AVG(a.KPIWeight5)),2) as "scope"
							from rewprojectscope a group by a.projectId
					)t on t.projectId = p.projectId
		left join rewcategory c on c.id = p.categoryId
		left join rewRecomIdea i on i.projectId = p.projectId
		left join rewgroup g on g.id = p.groupId
		<where>
			<if test="projectid != null and projectid != ''">
				p.projectId = #{projectid}
			</if>
			<if test="groupId != null and groupId != ''">
				and p.groupId = #{groupId}
			</if>
			<if test="currentYear != null and currentYear != ''">
				and p.currentYear = #{currentYear}
			</if>
			<if test="isGlyRole">
				and a.isAgree=1
			</if>

		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY <!-- g.groupName, -->i.recomIdea, t.scope DESC
			</otherwise>
		</choose>
	</select>
	
	
	
	<select id="findAllList" resultType="com.zkr.rew.csfirst.entity.Rewcsfirstvote">
		SELECT 
			<include refid="rewcsfirstvoteColumns"/>
		FROM rewcsfirstvote a
		<include refid="rewcsfirstvoteJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO rewcsfirstvote(
			projectid,
			scope,
			isagree,
			create_by,
			create_date,
			update_by,
			update_date
		) VALUES (
			#{projectid},
			#{scope},
			#{isagree},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate}
		)
	</insert>
	
	<update id="update">
		UPDATE rewcsfirstvote SET 	
			projectid = #{projectid},
			scope = #{scope},
			isagree = #{isagree},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM rewcsfirstvote
		WHERE id = #{id}
	</update>
	
	<!-- 获得该用户 已经投了多少票了 -->
	<select id="selectVotedNum" resultType="com.zkr.rew.csfirst.entity.Rewcsfirstvote" parameterType="com.thinkgem.jeesite.modules.sys.entity.User" >
		select a.* 
		 from  rewproject p 
		  join rewcsfirstvote a on a.projectId = p.projectId  
		 where a.isAgree = '1' 
		   and a.create_by = #{id}
		   and p.currentYear = #{currentYear}
	</select>
</mapper>